[{"D:\\ai-interview\\src\\index.js":"1","D:\\ai-interview\\src\\reportWebVitals.js":"2","D:\\ai-interview\\src\\App.js":"3","D:\\ai-interview\\src\\component\\videorecorder.js":"4"},{"size":780,"mtime":1607510392689,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":1774,"mtime":1607510358119,"results":"8","hashOfConfig":"6"},{"size":2426,"mtime":1607510355607,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sixvyz",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},"D:\\ai-interview\\src\\index.js",[],"D:\\ai-interview\\src\\reportWebVitals.js",[],["20","21"],"D:\\ai-interview\\src\\App.js",[],"D:\\ai-interview\\src\\component\\videorecorder.js",["22"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './video.css';\n\n\nconst videoType = 'video/webm';\n\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recording: false,\n      videos: [],\n    };\n  }\n\n  async componentDidMount() {\n    const stream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\n    this.video.srcObject = stream;\n    this.video.play();\n    this.mediaRecorder = new MediaRecorder(stream, {\n      mimeType: videoType,\n    });\n    this.chunks = [];\n    this.mediaRecorder.ondataavailable = e => {\n      if (e.data && e.data.size > 0) {\n        this.chunks.push(e.data);\n      }\n    };\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    this.chunks = [];\n    this.mediaRecorder.start(10);\n    this.setState({recording: true});\n  }\n\n  stopRecording(e) {\n    e.preventDefault();\n    this.mediaRecorder.stop();\n    this.setState({recording: false});\n    this.saveVideo();\n  }\n\n  saveVideo() {\n    const blob = new Blob(this.chunks, {type: videoType});\n    const videoURL = window.URL.createObjectURL(blob);\n    const videos = this.state.videos.concat([videoURL]);\n    this.setState({videos});\n  }\n\n  deleteVideo(videoURL) {\n    const videos = this.state.videos.filter(v => v !== videoURL);\n    this.setState({videos});\n  }\n\n  render() {\n    const {recording, videos} = this.state;\n\n    return (\n      <div className=\"maiin\">\n        <video\n          class=\"vid\"\n          ref={v => {\n            this.video = v;\n          }}>\n          Video stream not available.\n        </video>\n        <div>\n          {!recording && <button class=\"buton1\"  onClick={e => this.startRecording(e)}><b>Record</b></button>}\n          {recording && <button class=\"buton2\" onClick={e => this.stopRecording(e)}><b>Stop</b></button>}\n        </div>\n        <div>\n          <p class=\"recc\">Recorded videos:</p>\n          {videos.map((videoURL, i) => (\n            <div key={`video_${i}`}>\n              <video class=\"vid1\" style={{width: 400}} src={videoURL} autoPlay loop />\n              <div>\n                <button class=\"buton4\" onClick={() => this.deleteVideo(videoURL)}>Delete</button>\n                <a class=\"buton3\" href={videoURL}>Download</a>\n                {!recording && <button class=\"buton5\" onClick={()=> this.props.next()} >Next</button>}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":16},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]