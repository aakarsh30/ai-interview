[{"D:\\ai-interview\\src\\index.js":"1","D:\\ai-interview\\src\\reportWebVitals.js":"2","D:\\ai-interview\\src\\App.js":"3","D:\\ai-interview\\src\\component\\videorecorder.js":"4","D:\\ai-interview\\src\\component\\thank.js":"5","D:\\ai-interview\\src\\component\\questions.js":"6"},{"size":1084,"mtime":1607517402821,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1941,"mtime":1607517377873,"results":"10","hashOfConfig":"8"},{"size":2426,"mtime":1607510355607,"results":"11","hashOfConfig":"8"},{"size":644,"mtime":1607517483654,"results":"12","hashOfConfig":"8"},{"size":2015,"mtime":1607516677658,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sixvyz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\ai-interview\\src\\index.js",[],"D:\\ai-interview\\src\\reportWebVitals.js",[],["28","29"],"D:\\ai-interview\\src\\App.js",[],"D:\\ai-interview\\src\\component\\videorecorder.js",["30"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './video.css';\n\n\nconst videoType = 'video/webm';\n\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recording: false,\n      videos: [],\n    };\n  }\n\n  async componentDidMount() {\n    const stream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\n    this.video.srcObject = stream;\n    this.video.play();\n    this.mediaRecorder = new MediaRecorder(stream, {\n      mimeType: videoType,\n    });\n    this.chunks = [];\n    this.mediaRecorder.ondataavailable = e => {\n      if (e.data && e.data.size > 0) {\n        this.chunks.push(e.data);\n      }\n    };\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    this.chunks = [];\n    this.mediaRecorder.start(10);\n    this.setState({recording: true});\n  }\n\n  stopRecording(e) {\n    e.preventDefault();\n    this.mediaRecorder.stop();\n    this.setState({recording: false});\n    this.saveVideo();\n  }\n\n  saveVideo() {\n    const blob = new Blob(this.chunks, {type: videoType});\n    const videoURL = window.URL.createObjectURL(blob);\n    const videos = this.state.videos.concat([videoURL]);\n    this.setState({videos});\n  }\n\n  deleteVideo(videoURL) {\n    const videos = this.state.videos.filter(v => v !== videoURL);\n    this.setState({videos});\n  }\n\n  render() {\n    const {recording, videos} = this.state;\n\n    return (\n      <div className=\"maiin\">\n        <video\n          class=\"vid\"\n          ref={v => {\n            this.video = v;\n          }}>\n          Video stream not available.\n        </video>\n        <div>\n          {!recording && <button class=\"buton1\"  onClick={e => this.startRecording(e)}><b>Record</b></button>}\n          {recording && <button class=\"buton2\" onClick={e => this.stopRecording(e)}><b>Stop</b></button>}\n        </div>\n        <div>\n          <p class=\"recc\">Recorded videos:</p>\n          {videos.map((videoURL, i) => (\n            <div key={`video_${i}`}>\n              <video class=\"vid1\" style={{width: 400}} src={videoURL} autoPlay loop />\n              <div>\n                <button class=\"buton4\" onClick={() => this.deleteVideo(videoURL)}>Delete</button>\n                <a class=\"buton3\" href={videoURL}>Download</a>\n                {!recording && <button class=\"buton5\" onClick={()=> this.props.next()} >Next</button>}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","D:\\ai-interview\\src\\component\\thank.js",["31","32"],"D:\\ai-interview\\src\\component\\questions.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":16},{"ruleId":"37","severity":1,"message":"41","line":1,"column":15,"nodeType":"39","messageId":"40","endLine":1,"endColumn":23},{"ruleId":"37","severity":1,"message":"42","line":5,"column":9,"nodeType":"39","messageId":"40","endLine":5,"endColumn":14},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'match' is defined but never used.","no-global-assign","no-unsafe-negation"]